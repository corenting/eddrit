name: CI

on:
  push:
    branches:
      - "master"
    tags:
      - "v*"
  pull_request:
    branches:
      - "master"

env:
  DOCKER_HUB_REGISTRY_IMAGE: corentingarcia/eddrit
  GHCR_REGISTRY_IMAGE: ghcr.io/corenting/eddrit

jobs:
  ci:
    name: Style and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "poetry"
      - name: Install dependencies
        run: poetry install
      - name: Style
        run:  make style
      - name: Test
        run: make test
        env:
          VALKEY_URL: valkeys://test.invalid
  docker_build:
    name: Build Docker image (${{ matrix.platform }})
    runs-on: ubuntu-latest
    needs: ci
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/i386
          - linux/arm64
          - linux/arm/v7
          - linux/ppc64le
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME  }}
          password: ${{ secrets.DOCKER_HUB_TOKEN  }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push by digest (Docker Hub)
        id: build_dockerhub
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.DOCKER_HUB_REGISTRY_IMAGE }},push-by-digest=${{ github.event_name != 'pull_request' }},name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
      - name: Build and push by digest (GHCR)
        id: build_ghcr
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.GHCR_REGISTRY_IMAGE }},push-by-digest=${{ github.event_name != 'pull_request' }},name-canonical=true,push=${{ github.event_name != 'pull_request' }}
          cache-from: type=gha,scope=${{ matrix.platform }}
          cache-to: type=gha,mode=max,scope=${{ matrix.platform }}
      - name: Export digest
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          mkdir -p /tmp/digests/dockerhub
          mkdir -p /tmp/digests/ghcr
          digest_docker="${{ steps.build_dockerhub.outputs.digest }}"
          touch "/tmp/digests/dockerhub/${digest_docker#sha256:}"
          digest_ghcr="${{ steps.build_ghcr.outputs.digest }}"
          touch "/tmp/digests/ghcr/${digest_ghcr#sha256:}"
      - name: Upload digest
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1
  docker_merge:
    name: Merge and push Docker images
    runs-on: ubuntu-latest
    needs:
      - docker_build
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME  }}
          password: ${{ secrets.DOCKER_HUB_TOKEN  }}
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Collect and push (Docker Hub)
        uses: ./.github/actions/merge-and-push
        with:
          image_name: ${{ env.DOCKER_HUB_REGISTRY_IMAGE }}
          registry: dockerhub
      - name: Collect and push (GHCR)
        uses: ./.github/actions/merge-and-push
        with:
          image_name: ${{ env.GHCR_REGISTRY_IMAGE }}
          registry: ghcr
  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs:
      - docker_merge
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Version $version
