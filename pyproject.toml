[tool.poetry]
name = "eddrit"
version = "0.8.9"
description = "Alternative Reddit frontend"
authors = ["corenting <corenting@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12"
aiofiles = "^24"
environs = "^11.0.0"
gunicorn = "^23.0.0"
httpx = {version = "^0.27.0", extras = ["http2"]}
Jinja2 = "^3.1.4"
loguru = "^0.7.0"
lxml = "^5.3.0"
python-multipart = "^0.0.10" # for settings form
starlette = "^0.39.0"
timeago = "^1.0.16"
tldextract = "^5.1.2"
uvicorn = {version = "^0.30.6", extras = ["standard"]}
valkey = {version = "^6.0.2"}

[tool.poetry.dev-dependencies]
coverage = {version = "*", extras = ["toml"]}
pyright = "*"
pytest = "*"
pytest-cov = "*"
ruff = "*"

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
# Enable pycodestyle (E), Pyflakes (F), flake8-print (T20), ruff rules (RUF),
# flake8-comprehensions (C4), flake8-datetimez (DTZ), isort (I), pep8-naming (N)
# pyupgrade (UP), flake8-async (ASYNC), flake8-bandit (S), perflint (PERF),
# tryceratops (SIM)
select = ["E", "F", "T20", "RUF", "C4", "DTZ", "I", "N", "UP", "ASYNC", "S", "PERF", "SIM"]
ignore = ["E501"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"app.py" = ["S104"] # binding on all interfaces for dev

[tool.coverage.run]
omit = ["eddrit/config.py"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
